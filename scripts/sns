#!/bin/sh -e
### BEGIN INIT INFO
# Provides:          sns
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Required-Start:    $local_fs
# Required-Stop:     $local_fs
# Short-Description: Create sns directories
### END INIT INFO

export SNS_RUNROOT=/var/run/sns
export SNS_TMPROOT=/var/tmp/sns

if test -d /run/shm; then
    export SNS_ACHROOT=/run/shm
elif test -d /dev/shm; then
    export SNS_ACHROOT=/dev/shm
else
    echo Could not find directory of ach channels 1>&2
    export SNS_ACHROOT=/dev/null
fi

run() {
    ARGS=""
    SNS_IDENT=""
    while test x"$1" != x--; do
        case "$1" in
            -d|-r|-rd|-dr)
                ARGS="$1 $ARGS"
                ;;
            -*)
                echo Invalid option: "$1"
                exit 1
                ;;
            *)
                if test -n "$SNS_IDENT"; then
                    echo Invalid option: "$1"
                    exit 1
                else
                    SNS_IDENT="$1"
                fi
                ;;
        esac
        shift
    done

    shift

    if test -z "$SNS_IDENT"; then
        echo Need to provide identifier
        exit 1
    fi

    if test -z "$1"; then
        echo No program specified
        exit 1
    fi

    export SNS_IDENT
    export SNS_RUNDIR=$SNS_RUNROOT/$SNS_IDENT
    export SNS_TMPDIR=$SNS_TMPROOT/$SNS_IDENT

    if test ! -d $SNS_RUNDIR; then  mkdir $SNS_RUNDIR; fi
    if test ! -d $SNS_TMPDIR; then  mkdir $SNS_TMPDIR; fi

    echo Running \""$SNS_IDENT"\"...
    exec achcop $ARGS              \
        -P $SNS_RUNDIR/ppid        \
        -p $SNS_RUNDIR/pid         \
        -o $SNS_TMPDIR/out         \
        -e $SNS_TMPDIR/out         \
        -- $@
}

sudo_mkdir() {
    dir=$1
    if test ! -d $dir; then
        if test x0 = "x$UID"; then
            mkdir -m 1777 $dir
        else
            echo "Sudo-ing to create directory"
            sudo mkdir $dir
            echo "Sudo-ing to chown directory"
            sudo chown $USER:$GID $dir
        fi
    fi
}

start() {
    sudo_mkdir $SNS_RUNROOT
    sudo_mkdir $SNS_TMPROOT

    ach mk -o 666 sns-log

    run -dr snslogd -- snslogd
}


cmd_kill() {
    ARGS=""
    SNS_IDENT="."
    while test -n "$1"; do
        case "$1" in
            -*) ARGS="$1 $ARGS"
                ;;
            *) SNS_IDENT="$1"
                ;;
        esac
        shift
    done
    PID=`cat "$SNS_RUNROOT/$SNS_IDENT/ppid"`
    if kill $ARGS $PID; then
        echo signaled "\`$SNS_IDENT'"
    fi
}



stop() {
    for ident in `ls $SNS_RUNROOT`; do
        if test -f $SNS_RUNROOT/$ident/ppid; then
            cmd_kill $ident || echo "Couldn't kill $ident"
        fi
    done
    ach rm sns-log
}

cmd_ls() {
    for ident in `ls $SNS_RUNROOT`; do
        if test -d $SNS_RUNROOT/$ident; then
            # check parent
            SNS_PPID=`sns-trylock $SNS_RUNROOT/$ident/ppid || echo DEAD`
            echo $ident parent $SNS_PPID

            # check child
            SNS_PID=`sns-trylock $SNS_RUNROOT/$ident/pid || echo DEAD`
            echo $ident self $SNS_PID

        fi
    done
}

sns_files() {
    echo  $SNS_RUNROOT
    echo $SNS_TMPROOT
    find $SNS_ACHROOT -name 'achshm-*'
}


case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    run)
        shift
        run $@
        ;;
    ls)
        cmd_ls
        ;;
    kill)
        shift
        cmd_kill $@
        ;;
    restart)
        stop
        start
        ;;
    force-reload)
        stop
        start
        ;;
    chown)
        chown -Rv $2 `sns_files`
        ;;
    chgrp)
        chgrp -Rv $2 `sns_files`
        ;;
    gdb)
        shift
        gdb --core=$SNS_TMPROOT/$1/core $2
        ;;
    cat)
        cat  $SNS_TMPROOT/$2/out
        ;;
    --version-man)
        cat <<EOF
0.0
EOF
        ;;
    help|--help|-\?)
        cat <<EOF
Usage: sns COMMAND [arguments]
Driver script for SNS daemons

Examples:
  sns start                              Create directories and start basic daemons
  sns stop                               Stop basic daemons
  sns restart                            Restart basic daemons
  sns run -d -r ident -- program -xyz    Run \`program -xyz' in the background,
                                         restarting on failure
  sns gdb ident program                  Run gdb on core file from crashed program
  sns cat ident                          Show output of program labeled "ident"
  sns kill ident                         Kill program labeled "ident"
  sns ls                                 Show which daemons are running
  sns chown gpb                          Set log/pid directory owner to \`gpb'
  sns chgrp gpb                          Set log/pid directory group to \`gpb'
  sns help                               Show this menu
EOF
        exit 0
        ;;
    *)
        echo 'Invalid command.  Run `sns help` for usage.' 1>&2
        exit 1;
esac
